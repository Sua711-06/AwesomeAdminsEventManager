@model AwesomeAdminsPartyManager.Models.Party
@using System.Reflection
@using System.ComponentModel.DataAnnotations

@{
    ViewData["Title"] = Model.Name;
    var properties = typeof(AwesomeAdminsPartyManager.Models.Party).GetProperties();
}

<div class="container-fluid d-flex justify-content-center">
	<div class="card w-75">
		<h1 class="card-header">@Html.DisplayFor(Model => Model.Name)</h1>
		<table class="table table-bordered h-100">
			<tbody>
				@foreach(var prop in properties) {
					if(prop.Name == "Name" || prop.Name == "PartyId") continue;
					var displayAttr = prop.GetCustomAttribute<DisplayAttribute>();
					var displayName = displayAttr?.Name ?? prop.Name;
					var value = prop.GetValue(Model);

					<tr>
						<th>@displayName</th>
						<td>
							@if(value is IEnumerable<object> list && !(value is string)) {
								<ul>
									@foreach(var item in list) {
										<li>@item</li>
									}
								</ul>
							} else {
								@value
							}
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

